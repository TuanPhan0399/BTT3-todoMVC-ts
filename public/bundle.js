/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (() => {

eval("\n// Selector\nconst taskInput = document.querySelector(\".task-input input\");\nconst taskBox = document.querySelector(\".task-box\");\n// getting localstorage todo-list\nlet todos = JSON.parse(localStorage.getItem(\"todo-list\") || \"[]\");\nlet taskInfo;\n// Event Listener\ntaskInput.addEventListener(\"keyup\", saveTask);\n// window\nwindow.updateStatus = updateStatus;\n// Function\nfunction showTodo() {\n    let li = \"\";\n    todos.forEach((todo, id) => {\n        // if todo status is completed, set the isCompleted value checked\n        let isCompleted = todo.taskStatus === \"completed\" ? \"checked\" : \"\";\n        li += `<li class=\"task\">\n            <div>\n              <input onchange=\"updateStatus(this)\" type=\"checkbox\" id=\"${id}\" ${isCompleted}>\n              <span ondblclick=\"editTask(this)\" class=\"${id} ${isCompleted}\">${todo.taskValue}</span>\n            </div>\n            <div class=\"task-close\">\n              <i onclick=\"deleteTask(${id})\" class=\"fa-solid fa-xmark\"></i>\n            </div>\n          </li>`;\n    });\n    taskBox.innerHTML = li;\n}\nshowTodo();\n// check iput\nfunction updateStatus(selectedTask) {\n    var _a;\n    // Getting paragraph that contains task name\n    let taskName = (_a = selectedTask.parentElement) === null || _a === void 0 ? void 0 : _a.lastElementChild;\n    // Getting ID\n    let id = Number(selectedTask.id);\n    if (selectedTask.checked) {\n        taskName.classList.add(\"checked\");\n        // updating the status of selected task to completed\n        todos[id].taskStatus = \"completed\";\n    }\n    else {\n        taskName.classList.remove(\"checked\");\n        // updating the status of selected task to pending\n        todos[id].taskStatus = \"pending\";\n    }\n    localStorage.setItem(\"todo-list\", JSON.stringify(todos));\n}\n// Save to local\nfunction saveTask(e) {\n    // Do not take spaces and null characters\n    let userTask = taskInput.value.trim();\n    if (e.key === \"Enter\" && userTask) {\n        taskInput.value = \"\";\n        // Add one task new on todos\n        taskInfo = {\n            taskValue: userTask,\n            taskStatus: \"pending\",\n        };\n        todos.push(taskInfo);\n        localStorage.setItem(\"todo-list\", JSON.stringify(todos));\n        showTodo();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsR0FBRyxJQUFJLFlBQVk7QUFDNUYseURBQXlELElBQUksRUFBRSxZQUFZLElBQUksZUFBZTtBQUM5RjtBQUNBO0FBQ0EsdUNBQXVDLEdBQUc7QUFDMUM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2VicGFjay10eXBlc2NyaXB0Ly4vc3JjL2luZGV4LnRzP2U5NGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBTZWxlY3RvclxuY29uc3QgdGFza0lucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50YXNrLWlucHV0IGlucHV0XCIpO1xuY29uc3QgdGFza0JveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudGFzay1ib3hcIik7XG4vLyBnZXR0aW5nIGxvY2Fsc3RvcmFnZSB0b2RvLWxpc3RcbmxldCB0b2RvcyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ0b2RvLWxpc3RcIikgfHwgXCJbXVwiKTtcbmxldCB0YXNrSW5mbztcbi8vIEV2ZW50IExpc3RlbmVyXG50YXNrSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIHNhdmVUYXNrKTtcbi8vIHdpbmRvd1xud2luZG93LnVwZGF0ZVN0YXR1cyA9IHVwZGF0ZVN0YXR1cztcbi8vIEZ1bmN0aW9uXG5mdW5jdGlvbiBzaG93VG9kbygpIHtcbiAgICBsZXQgbGkgPSBcIlwiO1xuICAgIHRvZG9zLmZvckVhY2goKHRvZG8sIGlkKSA9PiB7XG4gICAgICAgIC8vIGlmIHRvZG8gc3RhdHVzIGlzIGNvbXBsZXRlZCwgc2V0IHRoZSBpc0NvbXBsZXRlZCB2YWx1ZSBjaGVja2VkXG4gICAgICAgIGxldCBpc0NvbXBsZXRlZCA9IHRvZG8udGFza1N0YXR1cyA9PT0gXCJjb21wbGV0ZWRcIiA/IFwiY2hlY2tlZFwiIDogXCJcIjtcbiAgICAgICAgbGkgKz0gYDxsaSBjbGFzcz1cInRhc2tcIj5cbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIDxpbnB1dCBvbmNoYW5nZT1cInVwZGF0ZVN0YXR1cyh0aGlzKVwiIHR5cGU9XCJjaGVja2JveFwiIGlkPVwiJHtpZH1cIiAke2lzQ29tcGxldGVkfT5cbiAgICAgICAgICAgICAgPHNwYW4gb25kYmxjbGljaz1cImVkaXRUYXNrKHRoaXMpXCIgY2xhc3M9XCIke2lkfSAke2lzQ29tcGxldGVkfVwiPiR7dG9kby50YXNrVmFsdWV9PC9zcGFuPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFzay1jbG9zZVwiPlxuICAgICAgICAgICAgICA8aSBvbmNsaWNrPVwiZGVsZXRlVGFzaygke2lkfSlcIiBjbGFzcz1cImZhLXNvbGlkIGZhLXhtYXJrXCI+PC9pPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9saT5gO1xuICAgIH0pO1xuICAgIHRhc2tCb3guaW5uZXJIVE1MID0gbGk7XG59XG5zaG93VG9kbygpO1xuLy8gY2hlY2sgaXB1dFxuZnVuY3Rpb24gdXBkYXRlU3RhdHVzKHNlbGVjdGVkVGFzaykge1xuICAgIHZhciBfYTtcbiAgICAvLyBHZXR0aW5nIHBhcmFncmFwaCB0aGF0IGNvbnRhaW5zIHRhc2sgbmFtZVxuICAgIGxldCB0YXNrTmFtZSA9IChfYSA9IHNlbGVjdGVkVGFzay5wYXJlbnRFbGVtZW50KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGFzdEVsZW1lbnRDaGlsZDtcbiAgICAvLyBHZXR0aW5nIElEXG4gICAgbGV0IGlkID0gTnVtYmVyKHNlbGVjdGVkVGFzay5pZCk7XG4gICAgaWYgKHNlbGVjdGVkVGFzay5jaGVja2VkKSB7XG4gICAgICAgIHRhc2tOYW1lLmNsYXNzTGlzdC5hZGQoXCJjaGVja2VkXCIpO1xuICAgICAgICAvLyB1cGRhdGluZyB0aGUgc3RhdHVzIG9mIHNlbGVjdGVkIHRhc2sgdG8gY29tcGxldGVkXG4gICAgICAgIHRvZG9zW2lkXS50YXNrU3RhdHVzID0gXCJjb21wbGV0ZWRcIjtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRhc2tOYW1lLmNsYXNzTGlzdC5yZW1vdmUoXCJjaGVja2VkXCIpO1xuICAgICAgICAvLyB1cGRhdGluZyB0aGUgc3RhdHVzIG9mIHNlbGVjdGVkIHRhc2sgdG8gcGVuZGluZ1xuICAgICAgICB0b2Rvc1tpZF0udGFza1N0YXR1cyA9IFwicGVuZGluZ1wiO1xuICAgIH1cbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInRvZG8tbGlzdFwiLCBKU09OLnN0cmluZ2lmeSh0b2RvcykpO1xufVxuLy8gU2F2ZSB0byBsb2NhbFxuZnVuY3Rpb24gc2F2ZVRhc2soZSkge1xuICAgIC8vIERvIG5vdCB0YWtlIHNwYWNlcyBhbmQgbnVsbCBjaGFyYWN0ZXJzXG4gICAgbGV0IHVzZXJUYXNrID0gdGFza0lucHV0LnZhbHVlLnRyaW0oKTtcbiAgICBpZiAoZS5rZXkgPT09IFwiRW50ZXJcIiAmJiB1c2VyVGFzaykge1xuICAgICAgICB0YXNrSW5wdXQudmFsdWUgPSBcIlwiO1xuICAgICAgICAvLyBBZGQgb25lIHRhc2sgbmV3IG9uIHRvZG9zXG4gICAgICAgIHRhc2tJbmZvID0ge1xuICAgICAgICAgICAgdGFza1ZhbHVlOiB1c2VyVGFzayxcbiAgICAgICAgICAgIHRhc2tTdGF0dXM6IFwicGVuZGluZ1wiLFxuICAgICAgICB9O1xuICAgICAgICB0b2Rvcy5wdXNoKHRhc2tJbmZvKTtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ0b2RvLWxpc3RcIiwgSlNPTi5zdHJpbmdpZnkodG9kb3MpKTtcbiAgICAgICAgc2hvd1RvZG8oKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.ts"]();
/******/ 	
/******/ })()
;