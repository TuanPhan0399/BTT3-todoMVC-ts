/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (() => {

eval("\n// Selector\nconst taskInput = document.querySelector(\".task-input input\");\nconst taskBox = document.querySelector(\".task-box\");\n// getting localstorage todo-list\nlet todos = JSON.parse(localStorage.getItem(\"todo-list\") || \"[]\");\nlet taskInfo;\n// Event Listener\ntaskInput.addEventListener(\"keyup\", saveTask);\n// window\nwindow.updateStatus = updateStatus;\nwindow.deleteTask = deleteTask;\n// Function\nfunction showTodo() {\n    let li = \"\";\n    todos.forEach((todo, id) => {\n        // if todo status is completed, set the isCompleted value checked\n        let isCompleted = todo.taskStatus === \"completed\" ? \"checked\" : \"\";\n        li += `<li class=\"task\">\n            <div>\n              <input onchange=\"updateStatus(this)\" type=\"checkbox\" id=\"${id}\" ${isCompleted}>\n              <span ondblclick=\"editTask(this)\" class=\"${id} ${isCompleted}\">${todo.taskValue}</span>\n            </div>\n            <div class=\"task-close\">\n              <i onclick=\"deleteTask(${id})\" class=\"fa-solid fa-xmark\"></i>\n            </div>\n          </li>`;\n    });\n    taskBox.innerHTML = li;\n}\nshowTodo();\n// check iput\nfunction updateStatus(selectedTask) {\n    var _a;\n    // Getting paragraph that contains task name\n    let taskName = (_a = selectedTask.parentElement) === null || _a === void 0 ? void 0 : _a.lastElementChild;\n    // Getting ID\n    let id = Number(selectedTask.id);\n    if (selectedTask.checked) {\n        taskName.classList.add(\"checked\");\n        // updating the status of selected task to completed\n        todos[id].taskStatus = \"completed\";\n    }\n    else {\n        taskName.classList.remove(\"checked\");\n        // updating the status of selected task to pending\n        todos[id].taskStatus = \"pending\";\n    }\n    localStorage.setItem(\"todo-list\", JSON.stringify(todos));\n}\n// Save to local\nfunction saveTask(e) {\n    // Do not take spaces and null characters\n    let userTask = taskInput.value.trim();\n    if (e.key === \"Enter\" && userTask) {\n        taskInput.value = \"\";\n        // Add one task new on todos\n        taskInfo = {\n            taskValue: userTask,\n            taskStatus: \"pending\",\n        };\n        todos.push(taskInfo);\n        localStorage.setItem(\"todo-list\", JSON.stringify(todos));\n        showTodo();\n    }\n}\n// Deleted task\nfunction deleteTask(deleteID) {\n    // remove selected task\n    todos.splice(deleteID, 1);\n    localStorage.setItem(\"todo-list\", JSON.stringify(todos));\n    showTodo();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlFQUF5RSxHQUFHLElBQUksWUFBWTtBQUM1Rix5REFBeUQsSUFBSSxFQUFFLFlBQVksSUFBSSxlQUFlO0FBQzlGO0FBQ0E7QUFDQSx1Q0FBdUMsR0FBRztBQUMxQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnBhY2stdHlwZXNjcmlwdC8uL3NyYy9pbmRleC50cz9lOTRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gU2VsZWN0b3JcbmNvbnN0IHRhc2tJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudGFzay1pbnB1dCBpbnB1dFwiKTtcbmNvbnN0IHRhc2tCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRhc2stYm94XCIpO1xuLy8gZ2V0dGluZyBsb2NhbHN0b3JhZ2UgdG9kby1saXN0XG5sZXQgdG9kb3MgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidG9kby1saXN0XCIpIHx8IFwiW11cIik7XG5sZXQgdGFza0luZm87XG4vLyBFdmVudCBMaXN0ZW5lclxudGFza0lucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCBzYXZlVGFzayk7XG4vLyB3aW5kb3dcbndpbmRvdy51cGRhdGVTdGF0dXMgPSB1cGRhdGVTdGF0dXM7XG53aW5kb3cuZGVsZXRlVGFzayA9IGRlbGV0ZVRhc2s7XG4vLyBGdW5jdGlvblxuZnVuY3Rpb24gc2hvd1RvZG8oKSB7XG4gICAgbGV0IGxpID0gXCJcIjtcbiAgICB0b2Rvcy5mb3JFYWNoKCh0b2RvLCBpZCkgPT4ge1xuICAgICAgICAvLyBpZiB0b2RvIHN0YXR1cyBpcyBjb21wbGV0ZWQsIHNldCB0aGUgaXNDb21wbGV0ZWQgdmFsdWUgY2hlY2tlZFxuICAgICAgICBsZXQgaXNDb21wbGV0ZWQgPSB0b2RvLnRhc2tTdGF0dXMgPT09IFwiY29tcGxldGVkXCIgPyBcImNoZWNrZWRcIiA6IFwiXCI7XG4gICAgICAgIGxpICs9IGA8bGkgY2xhc3M9XCJ0YXNrXCI+XG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICA8aW5wdXQgb25jaGFuZ2U9XCJ1cGRhdGVTdGF0dXModGhpcylcIiB0eXBlPVwiY2hlY2tib3hcIiBpZD1cIiR7aWR9XCIgJHtpc0NvbXBsZXRlZH0+XG4gICAgICAgICAgICAgIDxzcGFuIG9uZGJsY2xpY2s9XCJlZGl0VGFzayh0aGlzKVwiIGNsYXNzPVwiJHtpZH0gJHtpc0NvbXBsZXRlZH1cIj4ke3RvZG8udGFza1ZhbHVlfTwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhc2stY2xvc2VcIj5cbiAgICAgICAgICAgICAgPGkgb25jbGljaz1cImRlbGV0ZVRhc2soJHtpZH0pXCIgY2xhc3M9XCJmYS1zb2xpZCBmYS14bWFya1wiPjwvaT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvbGk+YDtcbiAgICB9KTtcbiAgICB0YXNrQm94LmlubmVySFRNTCA9IGxpO1xufVxuc2hvd1RvZG8oKTtcbi8vIGNoZWNrIGlwdXRcbmZ1bmN0aW9uIHVwZGF0ZVN0YXR1cyhzZWxlY3RlZFRhc2spIHtcbiAgICB2YXIgX2E7XG4gICAgLy8gR2V0dGluZyBwYXJhZ3JhcGggdGhhdCBjb250YWlucyB0YXNrIG5hbWVcbiAgICBsZXQgdGFza05hbWUgPSAoX2EgPSBzZWxlY3RlZFRhc2sucGFyZW50RWxlbWVudCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmxhc3RFbGVtZW50Q2hpbGQ7XG4gICAgLy8gR2V0dGluZyBJRFxuICAgIGxldCBpZCA9IE51bWJlcihzZWxlY3RlZFRhc2suaWQpO1xuICAgIGlmIChzZWxlY3RlZFRhc2suY2hlY2tlZCkge1xuICAgICAgICB0YXNrTmFtZS5jbGFzc0xpc3QuYWRkKFwiY2hlY2tlZFwiKTtcbiAgICAgICAgLy8gdXBkYXRpbmcgdGhlIHN0YXR1cyBvZiBzZWxlY3RlZCB0YXNrIHRvIGNvbXBsZXRlZFxuICAgICAgICB0b2Rvc1tpZF0udGFza1N0YXR1cyA9IFwiY29tcGxldGVkXCI7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0YXNrTmFtZS5jbGFzc0xpc3QucmVtb3ZlKFwiY2hlY2tlZFwiKTtcbiAgICAgICAgLy8gdXBkYXRpbmcgdGhlIHN0YXR1cyBvZiBzZWxlY3RlZCB0YXNrIHRvIHBlbmRpbmdcbiAgICAgICAgdG9kb3NbaWRdLnRhc2tTdGF0dXMgPSBcInBlbmRpbmdcIjtcbiAgICB9XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ0b2RvLWxpc3RcIiwgSlNPTi5zdHJpbmdpZnkodG9kb3MpKTtcbn1cbi8vIFNhdmUgdG8gbG9jYWxcbmZ1bmN0aW9uIHNhdmVUYXNrKGUpIHtcbiAgICAvLyBEbyBub3QgdGFrZSBzcGFjZXMgYW5kIG51bGwgY2hhcmFjdGVyc1xuICAgIGxldCB1c2VyVGFzayA9IHRhc2tJbnB1dC52YWx1ZS50cmltKCk7XG4gICAgaWYgKGUua2V5ID09PSBcIkVudGVyXCIgJiYgdXNlclRhc2spIHtcbiAgICAgICAgdGFza0lucHV0LnZhbHVlID0gXCJcIjtcbiAgICAgICAgLy8gQWRkIG9uZSB0YXNrIG5ldyBvbiB0b2Rvc1xuICAgICAgICB0YXNrSW5mbyA9IHtcbiAgICAgICAgICAgIHRhc2tWYWx1ZTogdXNlclRhc2ssXG4gICAgICAgICAgICB0YXNrU3RhdHVzOiBcInBlbmRpbmdcIixcbiAgICAgICAgfTtcbiAgICAgICAgdG9kb3MucHVzaCh0YXNrSW5mbyk7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidG9kby1saXN0XCIsIEpTT04uc3RyaW5naWZ5KHRvZG9zKSk7XG4gICAgICAgIHNob3dUb2RvKCk7XG4gICAgfVxufVxuLy8gRGVsZXRlZCB0YXNrXG5mdW5jdGlvbiBkZWxldGVUYXNrKGRlbGV0ZUlEKSB7XG4gICAgLy8gcmVtb3ZlIHNlbGVjdGVkIHRhc2tcbiAgICB0b2Rvcy5zcGxpY2UoZGVsZXRlSUQsIDEpO1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidG9kby1saXN0XCIsIEpTT04uc3RyaW5naWZ5KHRvZG9zKSk7XG4gICAgc2hvd1RvZG8oKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.ts"]();
/******/ 	
/******/ })()
;