/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (() => {

eval("\n// Selector\nconst taskInput = document.querySelector(\".task-input input\");\nconst taskBox = document.querySelector(\".task-box\");\nconst filters = document.querySelectorAll(\".filters > span\");\nconst controls = document.querySelector(\".controls\");\nconst iTaskInput = document.querySelector(\".task-input i\");\nconst clearAll = document.querySelector(\".clear-btn\");\nlet count = document.querySelector(\".count\");\n// Variable\nlet countIndex;\nlet idFilter = \"all\";\n// getting localstorage todo-list\nlet todos = JSON.parse(localStorage.getItem(\"todo-list\") || \"[]\");\nlet taskInfo;\n// Event Listener\ntaskInput.addEventListener(\"keyup\", saveTask);\n// Work with filters\nfilters.forEach((btn) => {\n    btn.addEventListener(\"click\", () => {\n        var _a;\n        (_a = document.querySelector(\"span.active\")) === null || _a === void 0 ? void 0 : _a.classList.remove(\"active\");\n        btn.classList.add(\"active\");\n        showTodo(btn.id);\n        return (idFilter = btn.id);\n    });\n});\n// window\nwindow.updateStatus = updateStatus;\nwindow.deleteTask = deleteTask;\nwindow.editTask = editTask;\nwindow.editSpan = editSpan;\n// Function\nfunction showTodo(filter) {\n    let li = \"\";\n    let todo;\n    countIndex = todos.length;\n    if (todos) {\n        todos.forEach((todo, id) => {\n            // handle count\n            if (todo.taskStatus === \"completed\") {\n                countIndex -= 1;\n            }\n            // if todo status is completed, set the isCompleted value checked\n            let isCompleted = todo.taskStatus === \"completed\" ? \"checked\" : \"\";\n            if (filter === todo.taskStatus || filter === \"all\") {\n                li += `<li class=\"task\">\n                <div>\n                  <input onchange=\"updateStatus(this)\" type=\"checkbox\" id=\"${id}\" ${isCompleted}>\n                  <span ondblclick=\"editTask(this)\" class=\"${id} ${isCompleted}\">${todo.taskValue}</span>\n                </div>\n                <div class=\"task-close\">\n                  <i onclick=\"deleteTask(${id})\" class=\"fa-solid fa-xmark\"></i>\n                </div>\n              </li>`;\n            }\n        });\n    }\n    todo = todos.filter((todo) => todo.taskStatus === \"completed\");\n    taskBox.innerHTML = li;\n    if (todos.length > 0) {\n        controls.style.display = \"flex\";\n        count.innerText = countIndex.toString();\n    }\n    else {\n        controls.style.display = \"none\";\n    }\n}\nshowTodo(idFilter);\n// check iput\nfunction updateStatus(selectedTask) {\n    var _a;\n    // Getting paragraph that contains task name\n    let taskName = (_a = selectedTask.parentElement) === null || _a === void 0 ? void 0 : _a.lastElementChild;\n    // Getting ID\n    let id = Number(selectedTask.id);\n    if (selectedTask.checked) {\n        taskName.classList.add(\"checked\");\n        // updating the status of selected task to completed\n        todos[id].taskStatus = \"completed\";\n    }\n    else {\n        taskName.classList.remove(\"checked\");\n        // updating the status of selected task to pending\n        todos[id].taskStatus = \"pending\";\n    }\n    localStorage.setItem(\"todo-list\", JSON.stringify(todos));\n}\n// Save to local\nfunction saveTask(e) {\n    // Do not take spaces and null characters\n    let userTask = taskInput.value.trim();\n    if (e.key === \"Enter\" && userTask) {\n        taskInput.value = \"\";\n        // Add one task new on todos\n        taskInfo = {\n            taskValue: userTask,\n            taskStatus: \"pending\",\n        };\n        todos.push(taskInfo);\n        localStorage.setItem(\"todo-list\", JSON.stringify(todos));\n        showTodo(idFilter);\n    }\n}\n// Deleted task\nfunction deleteTask(deleteID) {\n    // remove selected task\n    todos.splice(deleteID, 1);\n    localStorage.setItem(\"todo-list\", JSON.stringify(todos));\n    showTodo(idFilter);\n}\n// Data editing function\nfunction editTask(span) {\n    var _a, _b, _c;\n    const taskClose = ((_b = (_a = span.parentElement) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.lastElementChild);\n    const input = (_c = span.parentElement) === null || _c === void 0 ? void 0 : _c.firstElementChild;\n    taskClose.style.opacity = \"0\";\n    input.style.opacity = \"0\";\n    let valueInput = span.innerText;\n    span.innerText = \"\";\n    span.innerHTML += `<input onclick=\"editSpan(this)\" type=\"text\" value=\"${valueInput}\"></input>`;\n}\n// new data editting add with local\nfunction editSpan(input) {\n    var _a, _b, _c;\n    const span = input.parentElement;\n    const tickInput = (_a = span.parentElement) === null || _a === void 0 ? void 0 : _a.firstElementChild;\n    const taskClose = ((_c = (_b = span.parentElement) === null || _b === void 0 ? void 0 : _b.parentElement) === null || _c === void 0 ? void 0 : _c.lastElementChild);\n    const id = Number(span.classList[0]);\n    // add enter\n    input.addEventListener(\"keyup\", (event) => {\n        if (event.key === \"Enter\" && input.value.trim()) {\n            event.preventDefault();\n            span.innerText = input.value.trim();\n            input.style.display = \"none\";\n            taskClose.style.opacity = \"1\";\n            tickInput.style.opacity = \"1\";\n            todos[id].taskValue = span.innerText;\n            localStorage.setItem(\"todo-list\", JSON.stringify(todos));\n        }\n        else if (event.key === \"Enter\" && input.value === \"\") {\n            todos.splice(id, 1);\n            localStorage.setItem(\"todo-list\", JSON.stringify(todos));\n            showTodo(idFilter);\n        }\n    });\n    // add blur\n    input.addEventListener(\"blur\", (event) => {\n        if (input.value.trim()) {\n            event.preventDefault();\n            span.innerText = input.value.trim();\n            input.style.display = \"none\";\n            taskClose.style.opacity = \"1\";\n            tickInput.style.opacity = \"1\";\n            todos[id].taskValue = span.innerText;\n        }\n        else {\n            todos.splice(id, 1);\n        }\n        localStorage.setItem(\"todo-list\", JSON.stringify(todos));\n        showTodo(idFilter);\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSxHQUFHLElBQUksWUFBWTtBQUNoRyw2REFBNkQsSUFBSSxFQUFFLFlBQVksSUFBSSxlQUFlO0FBQ2xHO0FBQ0E7QUFDQSwyQ0FBMkMsR0FBRztBQUM5QztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFLFdBQVc7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnBhY2stdHlwZXNjcmlwdC8uL3NyYy9pbmRleC50cz9lOTRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gU2VsZWN0b3JcbmNvbnN0IHRhc2tJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudGFzay1pbnB1dCBpbnB1dFwiKTtcbmNvbnN0IHRhc2tCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRhc2stYm94XCIpO1xuY29uc3QgZmlsdGVycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZmlsdGVycyA+IHNwYW5cIik7XG5jb25zdCBjb250cm9scyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29udHJvbHNcIik7XG5jb25zdCBpVGFza0lucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50YXNrLWlucHV0IGlcIik7XG5jb25zdCBjbGVhckFsbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2xlYXItYnRuXCIpO1xubGV0IGNvdW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jb3VudFwiKTtcbi8vIFZhcmlhYmxlXG5sZXQgY291bnRJbmRleDtcbmxldCBpZEZpbHRlciA9IFwiYWxsXCI7XG4vLyBnZXR0aW5nIGxvY2Fsc3RvcmFnZSB0b2RvLWxpc3RcbmxldCB0b2RvcyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ0b2RvLWxpc3RcIikgfHwgXCJbXVwiKTtcbmxldCB0YXNrSW5mbztcbi8vIEV2ZW50IExpc3RlbmVyXG50YXNrSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIHNhdmVUYXNrKTtcbi8vIFdvcmsgd2l0aCBmaWx0ZXJzXG5maWx0ZXJzLmZvckVhY2goKGJ0bikgPT4ge1xuICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIChfYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJzcGFuLmFjdGl2ZVwiKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XG4gICAgICAgIGJ0bi5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xuICAgICAgICBzaG93VG9kbyhidG4uaWQpO1xuICAgICAgICByZXR1cm4gKGlkRmlsdGVyID0gYnRuLmlkKTtcbiAgICB9KTtcbn0pO1xuLy8gd2luZG93XG53aW5kb3cudXBkYXRlU3RhdHVzID0gdXBkYXRlU3RhdHVzO1xud2luZG93LmRlbGV0ZVRhc2sgPSBkZWxldGVUYXNrO1xud2luZG93LmVkaXRUYXNrID0gZWRpdFRhc2s7XG53aW5kb3cuZWRpdFNwYW4gPSBlZGl0U3Bhbjtcbi8vIEZ1bmN0aW9uXG5mdW5jdGlvbiBzaG93VG9kbyhmaWx0ZXIpIHtcbiAgICBsZXQgbGkgPSBcIlwiO1xuICAgIGxldCB0b2RvO1xuICAgIGNvdW50SW5kZXggPSB0b2Rvcy5sZW5ndGg7XG4gICAgaWYgKHRvZG9zKSB7XG4gICAgICAgIHRvZG9zLmZvckVhY2goKHRvZG8sIGlkKSA9PiB7XG4gICAgICAgICAgICAvLyBoYW5kbGUgY291bnRcbiAgICAgICAgICAgIGlmICh0b2RvLnRhc2tTdGF0dXMgPT09IFwiY29tcGxldGVkXCIpIHtcbiAgICAgICAgICAgICAgICBjb3VudEluZGV4IC09IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBpZiB0b2RvIHN0YXR1cyBpcyBjb21wbGV0ZWQsIHNldCB0aGUgaXNDb21wbGV0ZWQgdmFsdWUgY2hlY2tlZFxuICAgICAgICAgICAgbGV0IGlzQ29tcGxldGVkID0gdG9kby50YXNrU3RhdHVzID09PSBcImNvbXBsZXRlZFwiID8gXCJjaGVja2VkXCIgOiBcIlwiO1xuICAgICAgICAgICAgaWYgKGZpbHRlciA9PT0gdG9kby50YXNrU3RhdHVzIHx8IGZpbHRlciA9PT0gXCJhbGxcIikge1xuICAgICAgICAgICAgICAgIGxpICs9IGA8bGkgY2xhc3M9XCJ0YXNrXCI+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgIDxpbnB1dCBvbmNoYW5nZT1cInVwZGF0ZVN0YXR1cyh0aGlzKVwiIHR5cGU9XCJjaGVja2JveFwiIGlkPVwiJHtpZH1cIiAke2lzQ29tcGxldGVkfT5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIG9uZGJsY2xpY2s9XCJlZGl0VGFzayh0aGlzKVwiIGNsYXNzPVwiJHtpZH0gJHtpc0NvbXBsZXRlZH1cIj4ke3RvZG8udGFza1ZhbHVlfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFzay1jbG9zZVwiPlxuICAgICAgICAgICAgICAgICAgPGkgb25jbGljaz1cImRlbGV0ZVRhc2soJHtpZH0pXCIgY2xhc3M9XCJmYS1zb2xpZCBmYS14bWFya1wiPjwvaT5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9saT5gO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgdG9kbyA9IHRvZG9zLmZpbHRlcigodG9kbykgPT4gdG9kby50YXNrU3RhdHVzID09PSBcImNvbXBsZXRlZFwiKTtcbiAgICB0YXNrQm94LmlubmVySFRNTCA9IGxpO1xuICAgIGlmICh0b2Rvcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnRyb2xzLnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgICAgICAgY291bnQuaW5uZXJUZXh0ID0gY291bnRJbmRleC50b1N0cmluZygpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29udHJvbHMuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH1cbn1cbnNob3dUb2RvKGlkRmlsdGVyKTtcbi8vIGNoZWNrIGlwdXRcbmZ1bmN0aW9uIHVwZGF0ZVN0YXR1cyhzZWxlY3RlZFRhc2spIHtcbiAgICB2YXIgX2E7XG4gICAgLy8gR2V0dGluZyBwYXJhZ3JhcGggdGhhdCBjb250YWlucyB0YXNrIG5hbWVcbiAgICBsZXQgdGFza05hbWUgPSAoX2EgPSBzZWxlY3RlZFRhc2sucGFyZW50RWxlbWVudCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmxhc3RFbGVtZW50Q2hpbGQ7XG4gICAgLy8gR2V0dGluZyBJRFxuICAgIGxldCBpZCA9IE51bWJlcihzZWxlY3RlZFRhc2suaWQpO1xuICAgIGlmIChzZWxlY3RlZFRhc2suY2hlY2tlZCkge1xuICAgICAgICB0YXNrTmFtZS5jbGFzc0xpc3QuYWRkKFwiY2hlY2tlZFwiKTtcbiAgICAgICAgLy8gdXBkYXRpbmcgdGhlIHN0YXR1cyBvZiBzZWxlY3RlZCB0YXNrIHRvIGNvbXBsZXRlZFxuICAgICAgICB0b2Rvc1tpZF0udGFza1N0YXR1cyA9IFwiY29tcGxldGVkXCI7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0YXNrTmFtZS5jbGFzc0xpc3QucmVtb3ZlKFwiY2hlY2tlZFwiKTtcbiAgICAgICAgLy8gdXBkYXRpbmcgdGhlIHN0YXR1cyBvZiBzZWxlY3RlZCB0YXNrIHRvIHBlbmRpbmdcbiAgICAgICAgdG9kb3NbaWRdLnRhc2tTdGF0dXMgPSBcInBlbmRpbmdcIjtcbiAgICB9XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ0b2RvLWxpc3RcIiwgSlNPTi5zdHJpbmdpZnkodG9kb3MpKTtcbn1cbi8vIFNhdmUgdG8gbG9jYWxcbmZ1bmN0aW9uIHNhdmVUYXNrKGUpIHtcbiAgICAvLyBEbyBub3QgdGFrZSBzcGFjZXMgYW5kIG51bGwgY2hhcmFjdGVyc1xuICAgIGxldCB1c2VyVGFzayA9IHRhc2tJbnB1dC52YWx1ZS50cmltKCk7XG4gICAgaWYgKGUua2V5ID09PSBcIkVudGVyXCIgJiYgdXNlclRhc2spIHtcbiAgICAgICAgdGFza0lucHV0LnZhbHVlID0gXCJcIjtcbiAgICAgICAgLy8gQWRkIG9uZSB0YXNrIG5ldyBvbiB0b2Rvc1xuICAgICAgICB0YXNrSW5mbyA9IHtcbiAgICAgICAgICAgIHRhc2tWYWx1ZTogdXNlclRhc2ssXG4gICAgICAgICAgICB0YXNrU3RhdHVzOiBcInBlbmRpbmdcIixcbiAgICAgICAgfTtcbiAgICAgICAgdG9kb3MucHVzaCh0YXNrSW5mbyk7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidG9kby1saXN0XCIsIEpTT04uc3RyaW5naWZ5KHRvZG9zKSk7XG4gICAgICAgIHNob3dUb2RvKGlkRmlsdGVyKTtcbiAgICB9XG59XG4vLyBEZWxldGVkIHRhc2tcbmZ1bmN0aW9uIGRlbGV0ZVRhc2soZGVsZXRlSUQpIHtcbiAgICAvLyByZW1vdmUgc2VsZWN0ZWQgdGFza1xuICAgIHRvZG9zLnNwbGljZShkZWxldGVJRCwgMSk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ0b2RvLWxpc3RcIiwgSlNPTi5zdHJpbmdpZnkodG9kb3MpKTtcbiAgICBzaG93VG9kbyhpZEZpbHRlcik7XG59XG4vLyBEYXRhIGVkaXRpbmcgZnVuY3Rpb25cbmZ1bmN0aW9uIGVkaXRUYXNrKHNwYW4pIHtcbiAgICB2YXIgX2EsIF9iLCBfYztcbiAgICBjb25zdCB0YXNrQ2xvc2UgPSAoKF9iID0gKF9hID0gc3Bhbi5wYXJlbnRFbGVtZW50KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucGFyZW50RWxlbWVudCkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmxhc3RFbGVtZW50Q2hpbGQpO1xuICAgIGNvbnN0IGlucHV0ID0gKF9jID0gc3Bhbi5wYXJlbnRFbGVtZW50KSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuZmlyc3RFbGVtZW50Q2hpbGQ7XG4gICAgdGFza0Nsb3NlLnN0eWxlLm9wYWNpdHkgPSBcIjBcIjtcbiAgICBpbnB1dC5zdHlsZS5vcGFjaXR5ID0gXCIwXCI7XG4gICAgbGV0IHZhbHVlSW5wdXQgPSBzcGFuLmlubmVyVGV4dDtcbiAgICBzcGFuLmlubmVyVGV4dCA9IFwiXCI7XG4gICAgc3Bhbi5pbm5lckhUTUwgKz0gYDxpbnB1dCBvbmNsaWNrPVwiZWRpdFNwYW4odGhpcylcIiB0eXBlPVwidGV4dFwiIHZhbHVlPVwiJHt2YWx1ZUlucHV0fVwiPjwvaW5wdXQ+YDtcbn1cbi8vIG5ldyBkYXRhIGVkaXR0aW5nIGFkZCB3aXRoIGxvY2FsXG5mdW5jdGlvbiBlZGl0U3BhbihpbnB1dCkge1xuICAgIHZhciBfYSwgX2IsIF9jO1xuICAgIGNvbnN0IHNwYW4gPSBpbnB1dC5wYXJlbnRFbGVtZW50O1xuICAgIGNvbnN0IHRpY2tJbnB1dCA9IChfYSA9IHNwYW4ucGFyZW50RWxlbWVudCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmZpcnN0RWxlbWVudENoaWxkO1xuICAgIGNvbnN0IHRhc2tDbG9zZSA9ICgoX2MgPSAoX2IgPSBzcGFuLnBhcmVudEVsZW1lbnQpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5wYXJlbnRFbGVtZW50KSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MubGFzdEVsZW1lbnRDaGlsZCk7XG4gICAgY29uc3QgaWQgPSBOdW1iZXIoc3Bhbi5jbGFzc0xpc3RbMF0pO1xuICAgIC8vIGFkZCBlbnRlclxuICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCAoZXZlbnQpID0+IHtcbiAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gXCJFbnRlclwiICYmIGlucHV0LnZhbHVlLnRyaW0oKSkge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHNwYW4uaW5uZXJUZXh0ID0gaW5wdXQudmFsdWUudHJpbSgpO1xuICAgICAgICAgICAgaW5wdXQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgdGFza0Nsb3NlLnN0eWxlLm9wYWNpdHkgPSBcIjFcIjtcbiAgICAgICAgICAgIHRpY2tJbnB1dC5zdHlsZS5vcGFjaXR5ID0gXCIxXCI7XG4gICAgICAgICAgICB0b2Rvc1tpZF0udGFza1ZhbHVlID0gc3Bhbi5pbm5lclRleHQ7XG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInRvZG8tbGlzdFwiLCBKU09OLnN0cmluZ2lmeSh0b2RvcykpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGV2ZW50LmtleSA9PT0gXCJFbnRlclwiICYmIGlucHV0LnZhbHVlID09PSBcIlwiKSB7XG4gICAgICAgICAgICB0b2Rvcy5zcGxpY2UoaWQsIDEpO1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ0b2RvLWxpc3RcIiwgSlNPTi5zdHJpbmdpZnkodG9kb3MpKTtcbiAgICAgICAgICAgIHNob3dUb2RvKGlkRmlsdGVyKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIC8vIGFkZCBibHVyXG4gICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImJsdXJcIiwgKGV2ZW50KSA9PiB7XG4gICAgICAgIGlmIChpbnB1dC52YWx1ZS50cmltKCkpIHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBzcGFuLmlubmVyVGV4dCA9IGlucHV0LnZhbHVlLnRyaW0oKTtcbiAgICAgICAgICAgIGlucHV0LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgIHRhc2tDbG9zZS5zdHlsZS5vcGFjaXR5ID0gXCIxXCI7XG4gICAgICAgICAgICB0aWNrSW5wdXQuc3R5bGUub3BhY2l0eSA9IFwiMVwiO1xuICAgICAgICAgICAgdG9kb3NbaWRdLnRhc2tWYWx1ZSA9IHNwYW4uaW5uZXJUZXh0O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdG9kb3Muc3BsaWNlKGlkLCAxKTtcbiAgICAgICAgfVxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInRvZG8tbGlzdFwiLCBKU09OLnN0cmluZ2lmeSh0b2RvcykpO1xuICAgICAgICBzaG93VG9kbyhpZEZpbHRlcik7XG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.ts"]();
/******/ 	
/******/ })()
;